// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3

package handler

import (
	"net/http"

	croncycletask "dmc-task/cmd/dmctask/api/internal/handler/croncycletask"
	fixedtimesingletask "dmc-task/cmd/dmctask/api/internal/handler/fixedtimesingletask"
	realtimesingletask "dmc-task/cmd/dmctask/api/internal/handler/realtimesingletask"
	test "dmc-task/cmd/dmctask/api/internal/handler/test"
	"dmc-task/cmd/dmctask/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/cycle/add",
				Handler: croncycletask.AddCronCycleHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/cycle/del",
				Handler: croncycletask.DelCronCycleHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/cycle/mod",
				Handler: croncycletask.ModCronCycleHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/cycle/query",
				Handler: croncycletask.QueryCronCycleHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/cycle/startorstop",
				Handler: croncycletask.StartorstopCronCycleHandler(serverCtx),
			},
		},
		rest.WithPrefix("/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/cron/add",
				Handler: fixedtimesingletask.AddCronHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/cron/del",
				Handler: fixedtimesingletask.DelCronHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/cron/query",
				Handler: fixedtimesingletask.QueryCronHandler(serverCtx),
			},
		},
		rest.WithPrefix("/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/job/add",
				Handler: realtimesingletask.AddJobHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/job/query",
				Handler: realtimesingletask.QueryJobHandler(serverCtx),
			},
		},
		rest.WithPrefix("/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/demo",
				Handler: test.DemoHandler(serverCtx),
			},
		},
		rest.WithPrefix("/v1"),
	)
}
